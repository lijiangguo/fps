% Generated by roxygen2 (4.0.1): do not edit by hand
\name{svps}
\alias{svps}
\title{Singular Value Projection and Selection}
\usage{
svps(x, ndim, lambda = as.numeric(c()), nsol = 50L, lambdamin = -1,
  maxnvar = -1L, maxiter = 100L, tolerance = 0.001, verbose = 0L)
}
\arguments{
\item{x}{Input matrix}

\item{ndim}{Target subspace dimension (can be fractional)}

\item{nsol}{Number of solutions to compute}

\item{lambda}{Vector of regularization parameter values}

\item{lambdamin}{Minimum value of lambda (set automatically if
\code{lambdamin < 0})}

\item{maxnvar}{Suggested maximum number of variables to include
(ignored if \code{maxnvar <= 0})}

\item{maxiter}{Maximum number of iterations for each solution}

\item{tolerance}{Convergence threshold}

\item{verbose}{Level of verbosity; Silent if \code{verbose = 0},
                      otherwise display more messages and progress
                      indicators as \code{verbose} increases}
}
\value{
An S3 object of class \code{svps} which is a list with the
        following components:
  \item{ndim}{sum of squares (dimension) of the estimate}
  \item{lambda}{a vector containing the regularization parameters of each
                estimate}
  \item{projection}{a list containing the the (bi-)projection matrix
                    estimates}
  \item{leverage.row}{a matrix whose columns are the row leverages}
  \item{leverage.col}{a matrix whose columns are the column leverages}
  \item{L1}{a vector of the sum of absolute values of each estimate}
  \item{var.row}{}
  \item{var.col}{}
  \item{var.total}{}
  \item{niter}{a vector containing the number of ADMM iterations for each
               estimate}
}
\description{
This function computes a solution path of the Singular Value Projection
and Selection (SVPS) estimator.  It takes a data matrix \code{x} as input
and returns an object containing a list of projection matrices
estimated by SVPS over a sequence of regularization parameter values.
}
\details{
By default, a sensible minimum value of the regularization parameter
is automatically chosen so that the minimally regularized solution
is different from the ordinary SVD.
}
\examples{
# Apply FPS to the standardized wine data from the UCI ML repository
data(wine)
out <- svps(scale(wine), ndim = 3)
print(out)
plot(out)
}

